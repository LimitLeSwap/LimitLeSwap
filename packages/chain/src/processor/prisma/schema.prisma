// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator typegraphql {
  provider               = "typegraphql-prisma"
  emitTranspiledCode     = false
  // since the output directory is custom, this path must be relative to it in order to find the client-indexer
  customPrismaImportPath = "../../../../../node_modules/@prisma/client-processor"
  output                 = "./../api/generated/type-graphql"
}

generator client {
  provider = "prisma-client-js"
  output   = "./../../../node_modules/@prisma/client-processor"
}

datasource db {
  provider = "postgresql"
  url      = env("PROCESSOR_DATABASE_URL")
}

model Block {
  height Int @id
  // balances Balance[]
  // swaps    Swap[]
}

model Balance {
  height  Int
  tokenId String
  address String
  amount  BigInt
  // block   Block @relation(fields: [height], references: [height])
  // token   Token @relation(fields: [tokenId], references: [tokenId])

  @@id([height, address, tokenId])
  // @@index([address])
  // @@index([tokenId])
}

model Pool {
  poolId String @id
  token0Id String
  token1Id String
  token0Amount BigInt
  token1Amount BigInt
  totalLpAmount BigInt
  feePercentage Int
  createdAt DateTime @default(now())

  // swaps    Swap[]
  // orders   LimitOrder[]
}

model Swap {
  swapId String @id
  poolId String
  token0Amount BigInt
  token1Amount BigInt
  token0In1Out Boolean
  token0Price Decimal @db.Decimal(38, 18)
  token1Price Decimal @db.Decimal(38, 18)
  blockHeight Int
  owner String
  createdAt DateTime @default(now())

  // pool   Pool   @relation(fields: [poolId], references: [poolId])
  // block  Block  @relation(fields: [blockHeight], references: [height])
}

model Token {
  tokenId String @id
  decimals Int
  totalSupply BigInt
  createdAt DateTime @default(now())
  
  // balances Balance[]
}

model LimitOrder {
  orderId String @id
  poolId String
  token0Amount BigInt
  token1Amount BigInt
  token0Price Decimal @db.Decimal(38, 18)
  token1Price Decimal @db.Decimal(38, 18)
  token0In1Out Boolean
  owner String
  active Boolean
  expireBlock Int
  createdAt DateTime @default(now())

  // pool Pool @relation(fields: [poolId], references: [poolId])

  @@index([active])
  @@index([owner])
  @@index([poolId])
  @@index([token0Price, token1Price])
  @@index([active, poolId])
  @@index([owner, active])
  @@index([owner, poolId, active])

}

// Todo: probably need to add more fields
model TokenTrade {
  tradeId       String @id
  poolId        String
  token0Amount  Decimal @db.Decimal(38, 18)
  token1Amount  Decimal @db.Decimal(38, 18)
  token0Price   Decimal @db.Decimal(38, 18)
  token1Price   Decimal @db.Decimal(38, 18)
  token0In1Out  Boolean
  createdAt     DateTime @default(now())
}
